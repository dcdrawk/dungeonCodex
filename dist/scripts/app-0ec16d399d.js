!function(){"use strict";angular.module("dc",["ngAnimate","ngCookies","ngSanitize","ngMessages","ngAria","ngResource","ui.router","ngMaterial","toastr"])}(),function(){"use strict";function t(t,e){t.debugEnabled(!0),e.allowHtml=!0,e.timeOut=3e3,e.positionClass="toast-top-right",e.preventDuplicates=!0,e.progressBar=!0}angular.module("dc").config(t),t.$inject=["$logProvider","toastrConfig"]}(),function(){"use strict";angular.module("dc").constant("malarkey",malarkey).constant("moment",moment)}(),function(){"use strict";function t(t,e){t.state("home",{url:"/",templateUrl:"app/main/main.html",controller:"MainController",controllerAs:"vm"}),e.otherwise("/")}angular.module("dc").config(t),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t,e){var a=e.newDB();a.on("populate",function(){e.populateDB(a)}),t.debug("runBlock end")}angular.module("dc").run(t),t.$inject=["$log","dbService"]}(),function(){"use strict";function t(t,e){t.state("character-sheet",{url:"/character-sheet?characterId",views:{"name@character-sheet":{templateUrl:"app/character-sheet/name/name.html"},"basic@character-sheet":{templateUrl:"app/character-sheet/basic-info/basic-info.html",controller:"basicInfoController",controllerAs:"basicCtrl"},"stats@character-sheet":{templateUrl:"app/character-sheet/stats/stats.html",controller:"StatsController",controllerAs:"statsCtrl"},"proficiency-bonus@character-sheet":{templateUrl:"app/character-sheet/proficiency-bonus/proficiency-bonus.html"},"skills@character-sheet":{templateUrl:"app/character-sheet/skills/skills.html",controller:"SkillsController",controllerAs:"skillsCtrl"},"combat-stats@character-sheet":{templateUrl:"app/character-sheet/combat-stats/combat-stats.html",controller:"CombatStatsController",controllerAs:"combatCtrl"},"health@character-sheet":{templateUrl:"app/character-sheet/health/health.html",controller:"HealthController",controllerAs:"healthCtrl"},"class-features@character-sheet":{templateUrl:"app/character-sheet/class-features/class-features.html",controller:"ClassFeaturesController",controllerAs:"classFeatsCtrl"},"personality@character-sheet":{templateUrl:"app/character-sheet/personality/personality.html"},"saving-throws@character-sheet":{templateUrl:"app/character-sheet/saving-throws/saving-throws.html",controller:"SavingThrowsController",controllerAs:"savingThrowsCtrl"},"":{templateUrl:"app/character-sheet/character-sheet.html",controller:"CharacterController",controllerAs:"charCtrl"}}}),e.otherwise("/")}angular.module("dc").config(t),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t,e,a,r,n,c,i,l,s){function o(t,e,a,r,n){var c=this;c.hide=function(){e.hide()},c.cancel=function(){e.cancel()},c.answer=function(t){e.hide(t)},c.newCharacter=function(t){t.type="character",r.post(t).then(function(a){t._id=a.id,t._rev=a.rev,n.log(a),e.hide(t)})}}function d(){h.getCharacters()}var h=this;h.characters=[],h.showCreateCharacterDialog=function(t){r.show({controller:o,templateUrl:"app/components/newCharacter/new-character.dialog.html",parent:angular.element(l[0].body),targetEvent:t,clickOutsideToClose:!0,controllerAs:"dialog"}).then(function(t){s.log("here is the character:"),s.log(t),h.characters.push(t)},function(){})},h.getCharacters=function(){i.getCharacters().then(function(t){h.characters=t})},o.$inject=["$scope","$mdDialog","dbService","pouchService","$log"],d()}angular.module("dc").controller("MainController",t),t.$inject=["$timeout","webDevTec","toastr","$mdDialog","$scope","$mdMedia","characterService","$document","$log"]}(),function(){"use strict";function t(t,e,a,r){function n(){var t=r.newDB();r.deleteDB(t)}function c(t){e.show(e.alert().parent(angular.element(a[0].querySelector("#popupContainer"))).clickOutsideToClose(!0).title("Delete Database").textContent("Are you sure you want to delete the Database?").ariaLabel("Delete DB Dialog").ok("Confirm").targetEvent(t))}function i(t){var a=e.confirm().title("Confirm Reset Database").textContent("Are you sure you want to reset the database? Any saved data will be lost.").ariaLabel("Database Delete confirmation Dialog").targetEvent(t).ok("Reset").cancel("Cancel");e.show(a).then(function(){n()},function(){})}function l(){var t=r.newDB();n(),r.populateDB(t)}var s=this;s.deleteDB=n,s.showAlert=c,s.showConfirm=i,s.populateDB=l}angular.module("dc").controller("SettingsController",t),t.$inject=["toastr","$mdDialog","$document","dbService"]}(),function(){"use strict";function t(t,e){t.state("settings",{url:"/settings",templateUrl:"app/settings/settings.html",controller:"SettingsController",controllerAs:"vm"}),e.otherwise("/")}angular.module("dc").config(t),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t,e,a,r){function n(){c.getDBInfo()}var c=this;c.deleteDB=function(){a.deleteDB().then(function(){r.show(r.simple().textContent("Database deleted!")),c.getDBInfo()})},c.populateDB=function(){a.populateDB().then(function(){r.show(r.simple().textContent("Database populated!")),c.getDBInfo()})},c.getDBInfo=function(){a.info().then(function(t){c.test=t})},c.getAllDocs=function(){a.allDocs().then(function(e){t.log(e)})},c.query=function(t){a.query(t)},n()}angular.module("dc").controller("TestController",t),t.$inject=["$log","$scope","pouchService","$mdToast"]}(),function(){"use strict";function t(t,e){t.state("test",{url:"/test",templateUrl:"app/test/test.html",controller:"TestController",controllerAs:"vm"}),e.otherwise("/")}angular.module("dc").config(t),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function t(t,e,a,r){function n(){c.getRaces(),c.getClasses(),c.getBackgrounds(),c.getAlignments()}var c=this;c.getRaces=function(){var t={selector:{type:"race"},fields:["name"]};r.queryToArray(t,"name").then(function(t){c.races=t})},c.getBackgrounds=function(){var t={selector:{type:"background"},fields:["name"]};r.queryToArray(t,"name").then(function(t){c.backgrounds=t})},c.getClasses=function(){var t={selector:{type:"class"},fields:["name"]};r.queryToArray(t,"name").then(function(t){c.classes=t})},c.getSubraces=function(t){var e={selector:{type:"race",name:t},fields:["name","subraces"],sort:["type"]};r.queryToArray(e,"subraces").then(function(t){c.subraces=t})},c.getAlignments=function(){var t={selector:{type:"alignment"},fields:["name"],sort:["type"]};r.queryToArray(t,"name").then(function(t){c.alignments=t})},c.getArchetypes=function(t){var e={selector:{type:"class",name:t},fields:["name","specializations"]};r.queryToArray(e,"specializations").then(function(t){c.archetypes=t}),a.$emit("classChanged",t)},n()}angular.module("dc").controller("basicInfoController",t),t.$inject=["$http","$scope","$rootScope","pouchService"]}(),function(){"use strict";function t(t,e,a,r,n,c,i){function l(){}function s(t,e,a,r,n,c,l){function s(){o.getClassFeatures(o.className),o.getArchetypeFeatures(o.archetypeName),o.getClassList(),o.getArchetypesList()}var o=this;o.className=e,o.archetypeName=a,o.level=r,o.cancel=function(){t.cancel()},o.getClassFeatures=function(t){o.archetypeFeatures=[];var e={selector:{type:"classFeature","class":t,archetype:"None"},fields:["class","archetype","abilities"]};i.query(e).then(function(t){angular.forEach(t[0].abilities,function(t){t.level=parseFloat(t.level)}),o.classFeatures=t[0]})},o.getArchetypeFeatures=function(t){l.log(t);var e={selector:{type:"classFeature","class":o.className,archetype:t},fields:["class","archetype","abilities"]};i.query(e).then(function(t){l.log(t),angular.forEach(t[0].abilities,function(t){t.level=parseFloat(t.level)}),o.archetypeFeatures=t[0]})},o.getClassList=function(){var t={selector:{type:"class"},fields:["name"]};i.queryToArray(t,"name").then(function(t){o.classList=t})},o.getArchetypesList=function(){var t={selector:{type:"class",name:o.className},fields:["name","specializations"]};i.queryToArray(t,"specializations").then(function(t){o.archetypeList=t})},s()}var o=this,d=e.$on("classChanged",function(t,e){o.className=e,o.getClassFeatures(e)}),h=e.$on("archetypeChanged",function(t,e){o.archetype=e,r.log(e),o.classFeatures=a.filterAbilities(o.classFeaturesList,e)});e.$on("$destroy",d),e.$on("$destroy",h),o.getClassFeatures=function(t){var e={selector:{type:"classFeature","class":t},fields:["class","archetype","abilities"]};i.query(e).then(function(t){o.classFeaturesList=t,o.classFeatures=a.filterAbilities(t,o.archetype)})},l(),o.showClassFeaturesDialog=function(t,e,a,r){c.show({controller:s,templateUrl:"app/character-sheet/class-features/class-features.dialog.html",parent:angular.element(n[0].body),targetEvent:t,clickOutsideToClose:!0,controllerAs:"dialog",locals:{className:e,archetypeName:a,level:r}})},s.$inject=["$mdDialog","className","archetypeName","level","characterService","classFeaturesService","$log"]}angular.module("dc").controller("ClassFeaturesController",t),t.$inject=["$scope","$rootScope","classFeaturesService","$log","$document","$mdDialog","pouchService"]}(),function(){"use strict";function t(){function t(t,e){var a=[];for(var r in t)for(var n in t[r].abilities)"None"===t[r].archetype?(t[r].abilities[n].level=parseFloat(t[r].abilities[n].level),a.push(t[r].abilities[n])):e&&t[r].archetype===e&&(t[r].abilities[n].level=parseFloat(t[r].abilities[n].level),a.push(t[r].abilities[n]));return a}var e={filterAbilities:t};return e}angular.module("dc").factory("classFeaturesService",t)}(),function(){"use strict";function t(t,e,a,r){function n(){}function c(t,a,r,n,c,i,l,s){var o=this;o.character=a,o.description=c,o.abilityModifier=i,o.name=n,o.title=r,o.cancel=function(){t.cancel()},o.save=function(){s.put(o.character).then(function(t){e.log("Combat stats updated!"),o.character._rev=t.rev})}}var i=this;i.statMods=t.statMods,i.descriptions={armorClass:"Your Armor Class (AC) represents how well your character avoids being wounded in battle. Things that contribute to your AC include the armor you wear, the shield you carry, and your Dexterity modifier.",initiative:"At the beginning of every combat, you roll initiative by making a Dexterity check. Initiative determines the order of creatures’ turns in combat.",speed:"Every character and monster has a speed, which is the distance in feet that the character or monster can walk in 1 round."},n(),i.showCombatStatsDialog=function(t,e,n,i,l,s){a.show({controller:c,templateUrl:"app/character-sheet/combat-stats/combat-stats.dialog.html",parent:angular.element(r[0].body),targetEvent:t,clickOutsideToClose:!0,controllerAs:"dialog",locals:{character:e,title:n,name:i,description:l,abilityModifier:s}})},c.$inject=["$mdDialog","character","title","name","description","abilityModifier","characterService","pouchService"]}angular.module("dc").controller("CombatStatsController",t),t.$inject=["statsService","$log","$mdDialog","$document"]}(),function(){"use strict";function t(t,e){function a(){}function r(t,e,a,r,n,c,i,l,s){var o=this;o.character=e,o.title=r,o.name=n,o.level=a,s.log(c),o.character.healthStats=c,s.log(o.character),o.cancel=function(){t.cancel()},o.save=function(){s.log(o.character),l.put(o.character).then(function(t){o.character._rev=t.rev})}}var n=this;a(),n.showHealthDialog=function(a,n,c,i,l,s){t.show({controller:r,templateUrl:"app/character-sheet/health/health.dialog.html",parent:angular.element(e[0].body),targetEvent:a,clickOutsideToClose:!0,controllerAs:"dialog",locals:{character:n,title:i,name:l,health:s,level:c}})},r.$inject=["$mdDialog","character","level","title","name","health","characterService","pouchService","$log"]}angular.module("dc").controller("HealthController",t),t.$inject=["$mdDialog","$document"]}(),function(){"use strict";function t(){function t(t){return Math.ceil(parseInt(t)/4+1)}var e={getProficiencyBonus:t};return e}angular.module("dc").factory("proficiencyBonusService",t)}(),function(){"use strict";function t(t){function e(){}var a=this;a.statMods=t.statMods,e()}angular.module("dc").controller("SavingThrowsController",t),t.$inject=["statsService"]}(),function(){"use strict";function t(t,e,a,r,n,c,i){function l(){o.getSkills()}function s(t,e,a,r,n){var c=this;c.character=e,c.skill=a,c.skills=r,c.abilityModifier=n,c.hide=function(){t.hide()},c.cancel=function(){t.cancel()},c.answer=function(e){t.hide(e)},c.saveSkills=function(){i.put(c.character).then(function(t){c.character._rev=t.rev})}}var o=this;o.statMods=r.statMods,o.getSkills=function(){var t={selector:{type:"skill"},fields:["name","abilityScore","description"]};i.query(t).then(function(t){o.skills=t})},l(),o.showSkillDialog=function(t,e,r,n,i){a.show({controller:s,templateUrl:"app/character-sheet/skills/skill.dialog.html",parent:angular.element(c[0].body),targetEvent:t,clickOutsideToClose:!0,controllerAs:"dialog",locals:{character:e,skill:r,skills:n,abilityModifier:i}})},s.$inject=["$mdDialog","character","skill","skills","abilityModifier"]}angular.module("dc").controller("SkillsController",t),t.$inject=["$log","$scope","$mdDialog","statsService","$timeout","$document","pouchService"]}(),function(){"use strict";function t(t){var e=this;e.statMods={},e.getStatModifier=function(a,r){e.statMods=t.getStatModifier(a,r)}}angular.module("dc").controller("StatsController",t),t.$inject=["statsService"]}(),function(){"use strict";function t(){function t(t,a){return e[t]=Math.floor(parseInt(a)/2-5),e}var e={},a={getStatModifier:t,statMods:e};return a}angular.module("dc").factory("statsService",t)}(),function(){"use strict";function t(t,e,a,r,n,c,i){function l(){r.log("character id = "+o),s.getCharacter(o)}var s=this,o=t.characterId;s.getCharacter=function(t){e.getCharacter(t).then(function(t){s.character=t,s.getSpeed(s.character.race),s.getHitDice(s.character["class"])})},s.updateCharacter=function(){i.put(s.character).then(function(t){r.log("character updated!"),s.character._rev=t.rev})},s.getProficiencyBonus=function(t){s.character.proficiencyBonus=a.getProficiencyBonus(t)},s.getSpeed=function(t){var e={selector:{type:"race",name:t},fields:["speed"]};i.query(e).then(function(t){s.character.speed=t[0].speed})},s.getHitDice=function(t){var e={selector:{type:"class",name:t},fields:["hitDice"]};i.query(e).then(function(t){s.character.hitDice=t[0].hitDice})},s.emitArchetype=function(t){c.$emit("archetypeChanged",t)},l()}angular.module("dc").controller("CharacterController",t),t.$inject=["$stateParams","characterService","proficiencyBonusService","$log","$scope","$rootScope","pouchService"]}(),function(){"use strict";function t(t,e,a,r,n){function c(){var e={selector:{type:"character"},fields:["name","_id"]};return n.query(e).then(function(e){return t.log(e),e})}function i(t){return n.get(t).then(function(t){return t})}function l(e){n.put(e).then(function(e){t.log(e)})}var s={},o={getCharacters:c,getCharacter:i,updateCharacter:l,character:s};return o}angular.module("dc").factory("characterService",t),t.$inject=["$log","$http","dbService","$q","pouchService"]}(),function(){"use strict";function t(t,e,a){function r(){var t=new Dexie("DungeonCodex");return t.version(4).stores({characters:"++id,name,race,subrace,class,archetype,alignment,background,level,experience,skills,combatStats,healthStats,personality,savingThrows",classes:"++id,name,hitDice,hitPoints,proficiencies,specializations",classFeatures:"++id,class,archetype,*abilities",backgrounds:"++id,name,description,toolProficiencies,skillProficiencies,languages,equipment,feature,special",feats:"++id,name,description",languages:"++id,type",races:"++id,name,abilityScoreIncrease,speed,languages,traits,subraces",alignments:"++id,name,description",skills:"++id,name,abilityScore,description"}),t.open(),t}function n(t){t["delete"]().then(function(){})["catch"](function(t){e.error("Could not delete database"),e.error(t)})["finally"](function(){c(t)})}function c(t){t.open(),angular.forEach(m,function(a){return new Dexie.Promise(function(e,r){h(a).then(function(n){i(t,a,n),e(n),r(n)})}).then(function(t){e.log(t)})["catch"](function(t){e.log(t)}).then(function(){e.log("Transaction committed")})}),a.show(a.simple().textContent("Database successfully reset!"))}function i(t,e,a){t.transaction("rw!",t[e],function(){angular.forEach(a[e],function(a){t[e].add(a)})})}function l(t,e,a){return t[e].orderBy(a).keys(function(t){return t})}function s(t,e,a,r){return t[e].where(a).equalsIgnoreCase(r).toArray(function(t){return t[0]})}function o(t,e){return t[e].toArray(function(t){return t})}function d(t,e,a){return t[e].where("id").equals(parseInt(a)).toArray(function(t){return t[0]})}function h(e){return t({method:"GET",url:p+e+g}).then(function(t){return t.data})}function u(t,a,r,n){return t[a].update(r,n).then(function(t){t||e.error("Item id "+r+" could not be updated. Does it exist?")})}var m=["alignments","backgrounds","feats","races","languages","classes","classFeatures","skills"],p="assets/game-data/",g=".json";return{newDB:r,deleteDB:n,populateDB:c,getKeys:l,getItems:s,getById:d,updateById:u,getCollection:o}}angular.module("dc").service("dbService",t),t.$inject=["$http","$log","$mdToast"]}(),function(){"use strict";function t(t){function e(e,a,r){return t({method:"GET",url:e+a+r}).then(function(t){return t.data.fileName=a,t.data})}var a={getFile:e};return a}angular.module("dc").factory("fileService",t),t.$inject=["$http"]}(),function(){"use strict";function t(t,e,a,r){function n(){return e(function(t,e){p.info().then(function(e){t(e)})["catch"](function(t){alert(t),e(t)})})}function c(){return e(function(t,e){p.destroy().then(function(e){p=new PouchDB("appData"),t(e)})["catch"](function(t){alert(t),e(t)})})}function i(){return e(function(e,a){p.allDocs({include_docs:!0,attachments:!1}).then(function(t){e(t)})["catch"](function(e){t.log(e),a(e)})})}function l(){return e(function(t,e){d(),angular.forEach(g,function(a){r.getFile(f,a,v).then(function(a){var r=a[a.fileName];p.bulkDocs(r).then(function(){var e=a.fileName.slice(0,a.fileName.length-1).toLowerCase();p.createIndex({index:{fields:["type"],name:e,ddoc:e}}).then(function(e){t(e)})["catch"](function(t){alert(t)})})["catch"](function(t){alert(t),e(t)})})})})}function s(a){return e(function(e,r){p.find(a).then(function(a){t.log(a),e(a.docs)})["catch"](function(e){t.error(e),r(e)})})}function o(a,r){return e(function(e,n){p.find(a).then(function(t){var a=t.docs,n=[];for(var c in a)n.push(a[c][r]);e(angular.isObject(n[0])?n[0].sort():n.sort())})["catch"](function(e){t.error(e),n(e)})})}function d(){p.createIndex({index:{fields:["type"],name:"character",ddoc:"character"}}).then(function(e){t.log("created character index"),t.log(e)})["catch"](function(e){t.log(e)})}function h(a){return e(function(e,r){p.get(a).then(function(t){e(t)})["catch"](function(e){t.error(e),r(e)})})}function u(a){return e(function(e,r){p.put(a).then(function(a){t.log(a),e(a)})["catch"](function(e){t.error(e),r(e)})})}function m(a){return e(function(e,r){p.post(a).then(function(a){t.log(a),e(a)})["catch"](function(e){t.error(e),r(e)})})}var p=new PouchDB("appData",{size:5}),g=["alignments","backgrounds","feats","races","languages","classes","classFeatures","skills"],f="assets/game-data/",v=".json",b={info:n,populateDB:l,deleteDB:c,allDocs:i,query:s,queryToArray:o,get:h,put:u,post:m};return b}angular.module("dc").factory("pouchService",t),t.$inject=["$log","$q","$mdToast","fileService"]}(),function(){"use strict";function t(t,e){function a(a){function n(t){return t.data}function c(e){t.error("XHR Failed for getContributors.\n"+angular.toJson(e.data,!0))}return a||(a=30),e.get(r+"/contributors?per_page="+a).then(n)["catch"](c)}var r="https://api.github.com/repos/Swiip/generator-gulp-angular",n={apiHost:r,getContributors:a};return n}angular.module("dc").factory("githubContributor",t),t.$inject=["$log","$http"]}(),function(){"use strict";function t(t){function e(e,a,r,n){var c,i=t(a[0],{typeSpeed:40,deleteSpeed:40,pauseDelay:800,loop:!0,postfix:" "});a.addClass("acme-malarkey"),angular.forEach(e.extraValues,function(t){i.type(t).pause()["delete"]()}),c=e.$watch("vm.contributors",function(){angular.forEach(n.contributors,function(t){i.type(t.login).pause()["delete"]()})}),e.$on("$destroy",function(){c()})}function a(t,e){function a(){return r().then(function(){t.info("Activated Contributors View")})}function r(){return e.getContributors(10).then(function(t){return n.contributors=t,n.contributors})}var n=this;n.contributors=[],a()}var r={restrict:"E",scope:{extraValues:"="},template:"&nbsp;",link:e,controller:a,controllerAs:"vm"};return a.$inject=["$log","githubContributor"],r}angular.module("dc").directive("acmeMalarkey",t),t.$inject=["malarkey"]}(),function(){"use strict";function t(){function t(t,e,a){var r=this;r.relativeDate=t(r.creationDate).fromNow(),a.toggle=function(){e("left").toggle().then(function(){})}}var e={restrict:"E",templateUrl:"app/components/navbar/navbar.html",scope:{creationDate:"="},controller:t,controllerAs:"vm",bindToController:!0};return t.$inject=["moment","$mdSidenav","$scope"],e}angular.module("dc").directive("acmeNavbar",t)}(),function(){"use strict";function t(){function t(t,e,a){function r(e,r){var n;return function(){var c=t,i=Array.prototype.slice.call(arguments);a.cancel(n),n=a(function(){n=void 0,e.apply(c,i)},r||10)}}function n(t){return r(function(){e(t).toggle().then(function(){})},200)}function c(t){return function(){e(t).toggle().then(function(){})}}t.toggleLeft=n("left"),t.toggleRight=c("right"),t.isOpenRight=function(){return e("right").isOpen()},t.close=function(){e("left").close().then(function(){})},t.open=function(){e("left").open().then(function(){})},t.toggle=function(){e("left").toggle().then(function(){})}}var e={restrict:"E",templateUrl:"app/components/sidenav/sidenav.html",controller:t,controllerAs:"sn",bindToController:!0};return t.$inject=["$scope","$mdSidenav","$timeout"],e}angular.module("dc").directive("sidenav",t)}(),angular.module("dc").config(["$mdThemingProvider",function(t){t.theme("default").primaryPalette("blue",{"default":"700","hue-1":"400","hue-2":"600","hue-3":"A100"}).accentPalette("green",{"default":"400"}).warnPalette("purple",{"default":"400"})}]),function(){"use strict";function t(){function t(){return e}var e=[{title:"AngularJS",url:"https://angularjs.org/",description:"HTML enhanced for web apps!",logo:"angular.png"},{title:"BrowserSync",url:"http://browsersync.io/",description:"Time-saving synchronised browser testing.",logo:"browsersync.png"},{title:"GulpJS",url:"http://gulpjs.com/",description:"The streaming build system.",logo:"gulp.png"},{title:"Jasmine",url:"http://jasmine.github.io/",description:"Behavior-Driven JavaScript.",logo:"jasmine.png"},{title:"Karma",url:"http://karma-runner.github.io/",description:"Spectacular Test Runner for JavaScript.",logo:"karma.png"},{title:"Protractor",url:"https://github.com/angular/protractor",description:"End to end test framework for AngularJS applications built on top of WebDriverJS.",logo:"protractor.png"},{title:"Angular Material Design",url:"https://material.angularjs.org/#/",description:"The Angular reference implementation of the Google's Material Design specification.",logo:"angular-material.png"},{title:"Sass (Node)",url:"https://github.com/sass/node-sass",description:"Node.js binding to libsass, the C version of the popular stylesheet preprocessor, Sass.",logo:"node-sass.png"}];this.getTec=t}angular.module("dc").service("webDevTec",t)}(),angular.module("dc").run(["$templateCache",function(t){t.put("app/character-sheet/character-sheet.html",'<section id="character-sheet" layout-wrap="" layout="row" ng-cloak=""><div flex="33" layout="column"><div layout-gt-md="row"><md-card flex="" ng-show="charCtrl.character"><div class="md-padding" ui-view="name"></div></md-card><md-card flex="" ng-show="charCtrl.character"><div class="md-padding" ui-view="proficiency-bonus"></div></md-card></div><md-card ng-show="charCtrl.character"><div class="md-padding" ui-view="stats"></div></md-card><md-card ng-show="charCtrl.character"><div id="saving-throws" ui-view="saving-throws"></div></md-card><md-card ng-show="charCtrl.character"><div id="skills" ui-view="skills"></div></md-card></div><div flex="66" layout="column"><md-card ng-show="charCtrl.character"><div class="md-padding" ui-view="basic"></div></md-card><div layout="row"><div flex="50"><md-card ng-show="charCtrl.character.race"><div id="combat-stats" ui-view="combat-stats"></div></md-card><md-card ng-show="charCtrl.character.race"><div id="health" ui-view="health"></div></md-card></div><div flex="50"><md-card ng-show="charCtrl.character"><div id="pesronality" class="md-padding" ui-view="personality"></div></md-card><md-card ng-show="charCtrl.character"><div id="class-features" class="md-padding" ui-view="class-features"></div></md-card></div></div></div></section>'),t.put("app/main/dialog.html",'<md-dialog aria-label="Mango (Fruit)" ng-cloak=""><form><md-toolbar><div class="md-toolbar-tools"><h2>Mango (Fruit)</h2><span flex=""></span><md-button class="md-icon-button" ng-click="cancel()"><md-icon class="material_icons" aria-label="Close dialog">close</md-icon></md-button></div></md-toolbar><md-dialog-content><div class="md-dialog-content"><h2>Using .md-dialog-content class that sets the padding as the spec</h2><p>The mango is a juicy stone fruit belonging to the genus Mangifera, consisting of numerous tropical fruiting trees, cultivated mostly for edible fruit. The majority of these species are found in nature as wild mangoes. They all belong to the flowering plant family Anacardiaceae. The mango is native to South and Southeast Asia, from where it has been distributed worldwide to become one of the most cultivated fruits in the tropics.</p><p>The highest concentration of Mangifera genus is in the western part of Malesia (Sumatra, Java and Borneo) and in Burma and India. While other Mangifera species (e.g. horse mango, M. foetida) are also grown on a more localized basis, Mangifera indica&mdash;the "common mango" or "Indian mango"&mdash;is the only mango tree commonly cultivated in many tropical and subtropical regions.</p><p>It originated in Indian subcontinent (present day India and Pakistan) and Burma. It is the national fruit of India, Pakistan, and the Philippines, and the national tree of Bangladesh. In several cultures, its fruit and leaves are ritually used as floral decorations at weddings, public celebrations, and religious ceremonies.</p></div></md-dialog-content><md-dialog-actions layout="row"><md-button href="http://en.wikipedia.org/wiki/Mango" target="_blank" md-autofocus="">More on Wikipedia</md-button><span flex=""></span><md-button ng-click="answer(\'not useful\')">Not Useful</md-button><md-button ng-click="answer(\'useful\')" style="margin-right:20px;">Useful</md-button></md-dialog-actions></form></md-dialog>'),t.put("app/main/main.html",'<div class="title-bar"><div class="md-padding"><h1 class="md-headline">Characters</h1></div></div><md-button ng-click="vm.showCreateCharacterDialog($event)" class="md-fab md-accent add-button" aria-label="Comment"><md-icon class="material-icons">add</md-icon></md-button><section class="md-padding" layout="row" layout-wrap=""><div flex="33" ng-repeat="character in vm.characters" class="character-card" ng-show="character"><md-card md-ink-ripple="" id="my-button" ui-sref="character-sheet({characterId: character._id})"><md-card-title><md-card-title-text><p class="md-title">{{character.name}}</p><p class="md-subhead">Level {{character.level}} Halfling Rogue</p></md-card-title-text></md-card-title></md-card></div></section>'),t.put("app/settings/settings.html",'<div class="title-bar"><div class="md-padding"><h1 class="md-headline">Settings</h1></div></div><section layout="row" layout-wrap=""><div flex="100"><md-divider></md-divider><md-list><md-subheader class="md-no-sticky"><md-icon class="material_icons">storage</md-icon>Database</md-subheader><md-list-item class="md-2-line md-no-proxy"><div class="md-list-item-text md-offset"><md-button class="md-raised md-warn" ng-click="vm.showConfirm($event)">Reset Database</md-button></div></md-list-item></md-list></div></section>'),t.put("app/test/test.html",'<md-button class="md-raised md-primary" ng-click="vm.populateDB();">Populate DB</md-button><md-button class="md-raised md-primary" ng-click="vm.deleteDB();">Delete DB</md-button><pre>\r\n  {{vm.test}}\r\n</pre><pre>\r\n  {{vm.docs}}\r\n</pre>'),t.put("app/character-sheet/basic-info/basic-info.html",'<div layout="row" layout-wrap=""><md-input-container flex="25"><label>Class</label><md-select ng-model="charCtrl.character.class" ng-change="charCtrl.updateCharacter(charCtrl.character.id, {class:charCtrl.character.class}); charCtrl.getHitDice(charCtrl.character.class); basicCtrl.getArchetypes(charCtrl.character.class);"><md-option ng-repeat="class in basicCtrl.classes" value="{{class}}">{{class}}</md-option></md-select></md-input-container><md-input-container flex="25" ng-if="charCtrl.character.class" ng-init="basicCtrl.getArchetypes(charCtrl.character.class);charCtrl.emitArchetype(charCtrl.character.archetype);"><label>Archetype</label><md-select ng-model="charCtrl.character.archetype" ng-change="charCtrl.updateCharacter(charCtrl.character.id, {archetype:charCtrl.character.archetype}); charCtrl.emitArchetype(charCtrl.character.archetype);"><md-option ng-repeat="archetype in basicCtrl.archetypes" value="{{archetype.title}}">{{archetype.title}}</md-option></md-select></md-input-container><md-input-container flex=""><label>Background</label><md-select ng-model="charCtrl.character.background" ng-change="charCtrl.updateCharacter(charCtrl.character.id, {background:charCtrl.character.background})"><md-option ng-repeat="background in basicCtrl.backgrounds" value="{{background}}">{{background}}</md-option></md-select></md-input-container><md-input-container flex=""><label>Alignment</label><md-select ng-model="charCtrl.character.alignment" ng-change="charCtrl.updateCharacter(charCtrl.character.id, {alignment:charCtrl.character.alignment})"><md-option ng-repeat="alignment in basicCtrl.alignments" value="{{alignment}}">{{alignment}}</md-option></md-select></md-input-container></div><div layout="row" layout-wrap=""><md-input-container flex=""><label>Race</label><md-select ng-model="charCtrl.character.race" ng-change="basicCtrl.getSubraces(charCtrl.character.race); charCtrl.updateCharacter(charCtrl.character.id, {race:charCtrl.character.race}); charCtrl.character.subrace = \'\'; charCtrl.getSpeed(charCtrl.character.race);"><md-option ng-repeat="race in basicCtrl.races" value="{{race}}">{{race}}</md-option></md-select></md-input-container><md-input-container flex="" ng-if="charCtrl.character.race" ng-init="basicCtrl.getSubraces(charCtrl.character.race);"><label>Subrace</label><md-select ng-model="charCtrl.character.subrace" ng-change="charCtrl.updateCharacter(charCtrl.character.id, {subrace:charCtrl.character.subrace})"><md-option ng-repeat="subrace in basicCtrl.subraces track by subrace.name" value="{{subrace.name}}">{{subrace.name}}</md-option></md-select></md-input-container><md-input-container flex=""><label>Level</label> <input type="number" ng-model="charCtrl.character.level" ng-change="charCtrl.getProficiencyBonus(charCtrl.character.level); charCtrl.updateCharacter(charCtrl.character.id, {level:charCtrl.character.level})" max="20" min="1"></md-input-container><md-input-container flex=""><label>Exp</label> <input type="number" ng-model="charCtrl.character.experience" ng-change="charCtrl.updateCharacter(charCtrl.character.id, {experience:charCtrl.character.experience})"></md-input-container></div>'),t.put("app/character-sheet/class-features/class-features.dialog.html",'<md-dialog aria-label="Class Features Dialog" class="size-xl"><md-toolbar><div class="md-toolbar-tools"><h2>Class Features</h2><span flex=""></span><md-button class="md-icon-button" ng-click="dialog.cancel()"><md-icon aria-label="Close dialog" class="material_icons">close</md-icon></md-button></div></md-toolbar><md-dialog-content layout="column"><div class="loading-spinner" layout-align="space-around" layout-sm="column" layout="row" ng-if="!dialog.classFeatures.abilities"><md-progress-circular md-diameter="96" md-mode="indeterminate"></md-progress-circular></div><section class="md-padding" id="class-features-filters" layout-wrap="" layout="row" ng-if="dialog.classFeatures.abilities"><md-input-container flex="20"><label>Class</label><md-select ng-change="dialog.getClassFeatures(dialog.className); dialog.getArchetypesList();" ng-model="dialog.className"><md-option ng-repeat="class in dialog.classList" value="{{class}}">{{class}}</md-option></md-select></md-input-container><md-input-container flex="20"><label>Archetype</label><md-select ng-change="dialog.getArchetypeFeatures(dialog.archetypeName)" ng-model="dialog.archetypeName"><md-option ng-repeat="archetype in dialog.archetypeList" value="{{archetype.title}}">{{archetype.title}}</md-option></md-select></md-input-container><md-input-container flex="20"><label>Level</label> <input max="20" min="1" ng-model="dialog.level" type="number"></md-input-container><md-input-container flex="20"><label>Order By</label><md-select ng-model="dialog.orderBy"><md-option selected="" value="level">Level</md-option><md-option value="title">Title</md-option></md-select></md-input-container><md-input-container flex="20"><label>Direction</label><md-select ng-model="dialog.direction"><md-option selected="" value="false">Ascending</md-option><md-option value="true">Descending</md-option></md-select></md-input-container></section><section id="class-features-list" layout="column" ng-if="dialog.classFeatures.abilities"><md-content><md-list><md-list-item class="md-3-line" ng-if="feature.level <= dialog.level" flex="100" ng-repeat="feature in features = dialog.classFeatures.abilities.concat(dialog.archetypeFeatures.abilities) | orderBy : dialog.orderBy : dialog.direction===\'true\'"><div class="md-list-item-text md-long-text" layout="column"><h3>{{ feature.title }}</h3><h4>Level {{ feature.level | number}}</h4><p ng-bind-html="feature.description"></p></div><md-divider></md-divider></md-list-item><md-divider></md-divider></md-list></md-content></section></md-dialog-content></md-dialog>'),
t.put("app/character-sheet/class-features/class-features.html",'<div ng-click="classFeatsCtrl.showClassFeaturesDialog($event, charCtrl.character.class, charCtrl.character.archetype, charCtrl.character.level)" md-ink-ripple=""><span class="md-body-2 title">Class Features</span><div class="class-features" ng-if="charCtrl.character.class"><div ng-repeat="feature in classFeatsCtrl.classFeatures | orderBy:\'level\' track by $index" ng-if="charCtrl.character.level >= feature.level"><p>{{feature.level}} - {{feature.title}}</p></div></div></div>'),t.put("app/character-sheet/combat-stats/combat-stats.dialog.html",'<md-dialog aria-label="test" class="size-sm"><form><md-toolbar><div class="md-toolbar-tools"><h2>{{dialog.title}}</h2><span flex=""></span><md-button class="md-icon-button" ng-click="dialog.cancel()"><md-icon aria-label="Close dialog" class="material_icons">close</md-icon></md-button></div></md-toolbar><md-dialog-content class="md-padding" layout="column"><md-content><p class="md-body-1">{{dialog.description}}</p><div class="skill-stats" layout-wrap="" layout="row" ng-switch="dialog.name"><div class="stat-container" flex="50"><p>Ability Modifier</p><p ng-switch-when="acBonus" class="stat">{{dialog.abilityModifier+10}}</p><p ng-switch-when="acBonus" class="md-caption">(10 + Dex Modifier)</p><p ng-switch-when="initiativeBonus" class="stat">{{dialog.abilityModifier}}</p><p ng-switch-when="initiativeBonus" class="md-caption">(Dex Modifier)</p><p ng-switch-when="speedBonus" class="stat">{{dialog.abilityModifier}}</p><p ng-switch-when="speedBonus" class="md-caption">(Race Speed)</p></div><div class="stat-container" flex="50" ng-switch="dialog.name"><p>Bonus</p><p class="stat bonus"><md-input-container flex="33" md-no-float=""><input ng-switch-when="acBonus" aria-label="skill bonus" ng-change="dialog.save()" ng-model="dialog.character.combatStats[dialog.name]" placeholder="0" type="number"><input ng-switch-when="initiativeBonus" aria-label="skill bonus" ng-change="dialog.save()" ng-model="dialog.character.combatStats[dialog.name]" placeholder="0" type="number"><input ng-switch-when="speedBonus" step="5" aria-label="skill bonus" ng-change="dialog.save()" ng-model="dialog.character.combatStats[dialog.name]" placeholder="0" type="number"></md-input-container></p><p ng-switch-when="acBonus" class="md-caption no-margin">(Armor / Shield)</p><p ng-switch-when="initiativeBonus" class="md-caption no-margin">(Feats)</p><p ng-switch-when="speedBonus" class="md-caption no-margin">(Feats)</p><p></p></div></div></md-content></md-dialog-content></form></md-dialog>'),t.put("app/character-sheet/combat-stats/combat-stats.html",'<div layout="row" ng-if="charCtrl.character.speed"><div class="combat-stat-container md-padding" flex="33" md-ink-ripple="" ng-click="combatCtrl.showCombatStatsDialog($event, charCtrl.character, \'Armor Class\', \'acBonus\', combatCtrl.descriptions.armorClass, combatCtrl.statMods.dexterity);"><span class="md-body-2 title">AC</span> <span class="combat-stat">{{combatCtrl.statMods.dexterity + 10 + charCtrl.character.combatStats.acBonus}}</span></div><div class="combat-stat-container md-padding" flex="33" md-ink-ripple="" ng-click="combatCtrl.showCombatStatsDialog($event, charCtrl.character, \'Initiative\', \'initiativeBonus\', combatCtrl.descriptions.initiative, combatCtrl.statMods.dexterity);"><span class="md-body-2 title">Init.</span> <span class="combat-stat">{{combatCtrl.statMods.dexterity + charCtrl.character.combatStats.initiativeBonus}}</span></div><div class="combat-stat-container md-padding" flex="33" md-ink-ripple="" ng-click="combatCtrl.showCombatStatsDialog($event, charCtrl.character, \'Speed\', \'speedBonus\', combatCtrl.descriptions.speed, charCtrl.character.speed);"><span class="md-body-2 title">Spd.</span> <span class="combat-stat">{{1 * charCtrl.character.speed + charCtrl.character.combatStats.speedBonus}}\'</span></div></div>'),t.put("app/character-sheet/health/health.dialog.html",'<md-dialog aria-label="health dialog" class="size-sm"><form><md-toolbar><div class="md-toolbar-tools"><h2>{{dialog.title}}</h2><span flex=""></span><md-button class="md-icon-button" ng-click="dialog.cancel()"><md-icon aria-label="Close dialog" class="material_icons">close</md-icon></md-button></div></md-toolbar><md-dialog-content class="md-padding" layout="column"><md-content><div ng-switch="dialog.title"><p class="md-body-1" ng-switch-when="Hit Points">Your character’s hit points define how tough your character is in combat and other dangerous situations. Your hit points are determined by your Hit Dice (short for Hit Point Dice).</p><p class="md-body-1" ng-switch-when="Hit Dice">Hit Dice represent your character\'s total maximum hit points. You gain 1 hit dice per character level, and you can spend any number of Hit Dice to recover hit points during a short rest. Spent hit dice are restored after a long rest.</p><p class="md-body-1" ng-switch-when="Death Saves">Whenever you start your turn with 0 hit points, you must make a special saving throw, called a death saving throw, to determine whether you creep closer to death or hang onto life.</p><p class="md-body-1" ng-switch-when="Death Saves">Roll a d20. If the roll is 10 or higher, you succeed. Otherwise, you fail. A success or failure has no effect by itself. On your third success, you becom e stable (see below). On your third failure, you die.</p></div><section ng-switch="dialog.title"><div class="skill-stats" layout-wrap="" layout="row" ng-switch-when="Hit Points"><div class="stat-container" flex="33"><p>Current {{dialog.healthStats[dialog.name].max + dialog.healthStats[dialog.name].temp}}</p><p class="stat bonus"><md-input-container md-no-float=""><input aria-label="skill bonus" max="{{dialog.character.healthStats[dialog.name].max + dialog.character.healthStats[dialog.name].temp}}" min="0" ng-change="dialog.save()" ng-model="dialog.character.healthStats[dialog.name].current" placeholder="0" type="number"></md-input-container></p></div><div class="stat-container" flex="33"><p>Max</p><p class="stat bonus"><md-input-container md-no-float=""><input aria-label="skill bonus" min="0" ng-change="dialog.save()" ng-model="dialog.character.healthStats[dialog.name].max" placeholder="0" type="number"></md-input-container></p></div><div class="stat-container" flex="33"><p>Temp HP</p><p class="stat bonus"><md-input-container md-no-float=""><input aria-label="skill bonus" min="0" ng-change="dialog.save()" ng-model="dialog.character.healthStats[dialog.name].temp" placeholder="0" type="number"></md-input-container></p></div></div><div class="skill-stats" layout-wrap="" layout="row" ng-switch-when="Hit Dice"><div class="stat-container" flex="100"><p>Charges</p><p class="stat bonus">{{dialog.level}}{{dialog.health}}</p><p class="md-caption">(Level + Class Dice)</p></div></div><div class="skill-stats" layout-wrap="" layout="row" ng-switch-when="Death Saves"><div class="stat-container" flex="50"><p>Success</p><p class="stat bonus"><md-input-container md-no-float=""><input aria-label="skill bonus" max="3" min="0" ng-change="dialog.save()" ng-model="dialog.character.healthStats[dialog.name].success" placeholder="0" type="number">/ 3</md-input-container></p></div><div class="stat-container" flex="50"><p>Failure</p><p class="stat bonus"><md-input-container md-no-float=""><input aria-label="skill bonus" max="3" min="0" ng-change="dialog.save()" ng-model="dialog.character.healthStats[dialog.name].fail" placeholder="0" type="number">/ 3</md-input-container></p></div></div></section></md-content></md-dialog-content></form></md-dialog>'),t.put("app/character-sheet/health/health.html",'<div layout-wrap="" layout="row" ng-if="charCtrl.character.level"><div class="combat-stat-container md-padding" flex="33" md-ink-ripple="" ng-click="healthCtrl.showHealthDialog($event, charCtrl.character, charCtrl.character.level, \'Hit Points\', \'hitPoints\', charCtrl.character.healthStats)"><span class="md-body-2 title">Hit Points</span> <span class="combat-stat health-stat">{{charCtrl.character.healthStats.hitPoints.current}} / {{charCtrl.character.healthStats.hitPoints.max + charCtrl.character.healthStats.hitPoints.temp }}</span></div><div flex="33" class="combat-stat-container md-padding" md-ink-ripple="" ng-click="healthCtrl.showHealthDialog($event, charCtrl.character, charCtrl.character.level, \'Hit Dice\', \'hitDice\', charCtrl.character.hitDice)"><span class="md-body-2 title">Hit Dice</span> <span class="combat-stat">{{charCtrl.character.level}}{{charCtrl.character.hitDice}}</span></div><div flex="33" class="combat-stat-container md-padding death-saves" md-ink-ripple="" ng-click="healthCtrl.showHealthDialog($event, charCtrl.character, charCtrl.character.level, \'Death Saves\', \'deathSaves\', charCtrl.character.healthStats)"><span class="md-body-2 title">Death Saves</span><p class="md-body-1" ng-if="!charCtrl.character.healthStats.deathSaves.success">Success 0/3</p><p class="md-body-1" ng-if="charCtrl.character.healthStats.deathSaves.success">Success {{charCtrl.character.healthStats.deathSaves.success}}/3</p><p class="md-body-1" ng-if="!charCtrl.character.healthStats.deathSaves.fail">Failure 0/3</p><p class="md-body-1" ng-if="charCtrl.character.healthStats.deathSaves.fail">Failure {{charCtrl.character.healthStats.deathSaves.fail}}/3</p></div></div>'),t.put("app/character-sheet/name/name.html",'<md-input-container class="character-name"><label class="character-label">Character Name</label> <input ng-model="charCtrl.character.name" ng-change="charCtrl.updateCharacter(charCtrl.character.id, {name:charCtrl.character.name})"></md-input-container>'),t.put("app/character-sheet/personality/personality.html",'<span class="md-body-2 title">Personality</span><md-input-container><label>Traits</label> <textarea type="text" ng-model="charCtrl.character.personality.traits" ng-change="charCtrl.updateCharacter(charCtrl.character.id, {personality:charCtrl.character.personality})" max="100"></textarea></md-input-container><md-input-container><label>Ideals</label> <textarea type="text" ng-model="charCtrl.character.personality.ideals" ng-change="charCtrl.updateCharacter(charCtrl.character.id, {personality:charCtrl.character.personality})" max="100"></textarea></md-input-container><md-input-container><label>Bonds</label> <textarea type="text" ng-model="charCtrl.character.personality.bonds" ng-change="charCtrl.updateCharacter(charCtrl.character.id, {personality:charCtrl.character.personality})" max="100"></textarea></md-input-container><md-input-container><label>Flaws</label> <textarea type="text" ng-model="charCtrl.character.personality.flaws" ng-change="charCtrl.updateCharacter(charCtrl.character.id, {personality:charCtrl.character.personality})" max="100"></textarea></md-input-container>'),t.put("app/character-sheet/proficiency-bonus/proficiency-bonus.html",'<span class="md-body-2 title">Proficiency Bonus</span><md-input-container class="proficiency-bonus" flex=""><input type="number" ng-model="charCtrl.character.proficiencyBonus" ng-if="charCtrl.character.level" ng-init="charCtrl.getProficiencyBonus(charCtrl.character.level)" aria-label="Proficiency Bonus"></md-input-container>'),t.put("app/character-sheet/saving-throws/saving-throws.html",'<span class="md-body-2 title md-padding">Saving Throws</span><md-list-item ng-if="charCtrl.character"><md-checkbox ng-model="charCtrl.character.savingThrows.strength.trained" ng-change="charCtrl.updateCharacter(charCtrl.character.id, {savingThrows:charCtrl.character.savingThrows})"></md-checkbox><p>Strength</p><div ng-switch="" on="charCtrl.character.savingThrows.strength.trained"><div ng-switch-when="true"><span>{{savingThrowsCtrl.statMods.strength + charCtrl.character.proficiencyBonus}}</span></div><div ng-switch-default=""><span>{{savingThrowsCtrl.statMods.strength}}</span></div></div></md-list-item><md-list-item ng-if="charCtrl.character"><md-checkbox ng-model="charCtrl.character.savingThrows.dexterity.trained" ng-change="charCtrl.updateCharacter(charCtrl.character.id, {savingThrows:charCtrl.character.savingThrows})"></md-checkbox><p>Dexterity</p><div ng-switch="" on="charCtrl.character.savingThrows.dexterity.trained"><div ng-switch-when="true"><span>{{savingThrowsCtrl.statMods.dexterity + charCtrl.character.proficiencyBonus}}</span></div><div ng-switch-default=""><span>{{savingThrowsCtrl.statMods.dexterity}}</span></div></div></md-list-item><md-list-item ng-if="charCtrl.character"><md-checkbox ng-model="charCtrl.character.savingThrows.constitution.trained" ng-change="charCtrl.updateCharacter(charCtrl.character.id, {savingThrows:charCtrl.character.savingThrows})"></md-checkbox><p>Constitution</p><div ng-switch="" on="charCtrl.character.savingThrows.constitution.trained"><div ng-switch-when="true"><span>{{savingThrowsCtrl.statMods.constitution + charCtrl.character.proficiencyBonus}}</span></div><div ng-switch-default=""><span>{{savingThrowsCtrl.statMods.constitution}}</span></div></div></md-list-item><md-list-item ng-if="charCtrl.character"><md-checkbox ng-model="charCtrl.character.savingThrows.intelligence.trained" ng-change="charCtrl.updateCharacter(charCtrl.character.id, {savingThrows:charCtrl.character.savingThrows})"></md-checkbox><p>Intelligence</p><div ng-switch="" on="charCtrl.character.savingThrows.intelligence.trained"><div ng-switch-when="true"><span>{{savingThrowsCtrl.statMods.intelligence + charCtrl.character.proficiencyBonus}}</span></div><div ng-switch-default=""><span>{{savingThrowsCtrl.statMods.intelligence}}</span></div></div></md-list-item><md-list-item ng-if="charCtrl.character"><md-checkbox ng-model="charCtrl.character.savingThrows.wisdom.trained" ng-change="charCtrl.updateCharacter(charCtrl.character.id, {savingThrows:charCtrl.character.savingThrows})"></md-checkbox><p>Wisdom</p><div ng-switch="" on="charCtrl.character.savingThrows.wisdom.trained"><div ng-switch-when="true"><span>{{savingThrowsCtrl.statMods.wisdom + charCtrl.character.proficiencyBonus}}</span></div><div ng-switch-default=""><span>{{savingThrowsCtrl.statMods.wisdom}}</span></div></div></md-list-item><md-list-item ng-if="charCtrl.character"><md-checkbox ng-model="charCtrl.character.savingThrows.charisma.trained" ng-change="charCtrl.updateCharacter(charCtrl.character.id, {savingThrows:charCtrl.character.savingThrows})"></md-checkbox><p>Charisma</p><div ng-switch="" on="charCtrl.character.savingThrows.charisma.trained"><div ng-switch-when="true"><span>{{savingThrowsCtrl.statMods.charisma + charCtrl.character.proficiencyBonus}}</span></div><div ng-switch-default=""><span>{{savingThrowsCtrl.statMods.charisma}}</span></div></div></md-list-item>'),t.put("app/character-sheet/skills/skill.dialog.html",'<md-dialog aria-label="Skill Details" class="size-sm"><form><md-toolbar><div class="md-toolbar-tools"><h2>{{dialog.skill.name}}</h2><span flex=""></span><md-button class="md-icon-button" ng-click="dialog.cancel()"><md-icon aria-label="Close dialog" class="material_icons">close</md-icon></md-button></div></md-toolbar><md-dialog-content class="md-padding" layout="column"><md-content><p class="md-body-1">{{dialog.skill.description}}</p><div class="skill-stats" layout-wrap="" layout="row"><div class="stat-container" flex="33"><p>Training</p><md-input-container><md-checkbox aria-label="training checkbox" ng-change="dialog.saveSkills()" ng-model="dialog.skills[dialog.skill.name].trained"></md-checkbox></md-input-container><p class="md-caption">(+ prof. bonus)</p></div><div class="stat-container" flex="33"><p>Ability Modifier</p><p class="stat">{{dialog.abilityModifier}}</p><p class="md-caption">({{dialog.skill.abilityScore}})</p></div><div class="stat-container" flex="33"><p>Bonus</p><p class="stat bonus"><md-input-container flex="33" md-no-float=""><input aria-label="skill bonus" ng-change="dialog.saveSkills()" ng-model="dialog.skills[dialog.skill.name].bonus" placeholder="0" type="number"></md-input-container></p></div></div></md-content></md-dialog-content></form></md-dialog>'),t.put("app/character-sheet/skills/skills.html",'<span class="md-body-2 title md-padding">Skills</span><md-list-item ng-if="charCtrl.character && skillsCtrl.skills" ng-repeat="skill in skillsCtrl.skills | orderBy:\'name\'"><md-checkbox ng-change="charCtrl.updateCharacter()" ng-model="charCtrl.character.skills[skill.name].trained"></md-checkbox><p ng-click="skillsCtrl.showSkillDialog($event, charCtrl.character, skill, charCtrl.character.skills, skillsCtrl.statMods[skill.abilityScore.toLowerCase()]); $event.stopPropagation();">{{skill.name}}</p><div ng-switch="" on="charCtrl.character.skills[skill.name].trained"><div ng-switch-when="true"><span ng-click="skillsCtrl.showSkillDialog($event, charCtrl.character, skill, charCtrl.character.skills, skillsCtrl.statMods[skill.abilityScore.toLowerCase()]); $event.stopPropagation();">{{skillsCtrl.statMods[skill.abilityScore.toLowerCase()] + charCtrl.character.skills[skill.name].bonus + charCtrl.character.proficiencyBonus}}</span></div><div ng-switch-default=""><span ng-click="skillsCtrl.showSkillDialog($event, charCtrl.character, skill, charCtrl.character.skills, skillsCtrl.statMods[skill.abilityScore.toLowerCase()]); $event.stopPropagation();">{{skillsCtrl.statMods[skill.abilityScore.toLowerCase()] + charCtrl.character.skills[skill.name].bonus}}</span></div></div></md-list-item>'),t.put("app/character-sheet/stats/stats.html",'<span class="md-body-2 title">Stats</span><section id="stats" layout="row" layout-wrap=""><md-input-container class="stat-input" flex="50"><label>Str</label> <input type="number" ng-model="charCtrl.character.strength" ng-change="statsCtrl.getStatModifier(\'strength\', charCtrl.character.strength); charCtrl.updateCharacter(charCtrl.character.id, {strength:charCtrl.character.strength})"> <span class="material-icons">chevron_right</span> <span class="modifier" ng-if="charCtrl.character.strength" ng-init="statsCtrl.getStatModifier(\'strength\', charCtrl.character.strength);">{{statsCtrl.statMods.strength}}</span></md-input-container><md-input-container class="stat-input" flex="50"><label>Dex</label> <input type="number" ng-model="charCtrl.character.dexterity" ng-change="statsCtrl.getStatModifier(\'dexterity\', charCtrl.character.dexterity); charCtrl.updateCharacter(charCtrl.character.id, {dexterity:charCtrl.character.dexterity})"> <span class="material-icons">chevron_right</span> <span class="modifier" ng-if="charCtrl.character.dexterity" ng-init="statsCtrl.getStatModifier(\'dexterity\', charCtrl.character.dexterity);">{{statsCtrl.statMods.dexterity}}</span></md-input-container><md-input-container class="stat-input" flex="50"><label>Con</label> <input type="number" ng-model="charCtrl.character.constitution" ng-change="statsCtrl.getStatModifier(\'constitution\', charCtrl.character.constitution); charCtrl.updateCharacter(charCtrl.character.id, {constitution:charCtrl.character.constitution})"> <span class="material-icons">chevron_right</span> <span class="modifier" ng-if="charCtrl.character.constitution" ng-init="statsCtrl.getStatModifier(\'constitution\', charCtrl.character.constitution);">{{statsCtrl.statMods.constitution}}</span></md-input-container><md-input-container class="stat-input" flex="50"><label>Int</label> <input type="number" ng-model="charCtrl.character.intelligence" ng-change="statsCtrl.getStatModifier(\'intelligence\', charCtrl.character.intelligence); charCtrl.updateCharacter(charCtrl.character.id, {intelligence:charCtrl.character.intelligence})"> <span class="material-icons">chevron_right</span> <span class="modifier" ng-if="charCtrl.character.intelligence" ng-init="statsCtrl.getStatModifier(\'intelligence\', charCtrl.character.intelligence);">{{statsCtrl.statMods.intelligence}}</span></md-input-container><md-input-container class="stat-input" flex="50"><label>Wis</label> <input type="number" ng-model="charCtrl.character.wisdom" ng-change="statsCtrl.getStatModifier(\'wisdom\', charCtrl.character.wisdom); charCtrl.updateCharacter(charCtrl.character.id, {wisdom:charCtrl.character.wisdom})"> <span class="material-icons">chevron_right</span> <span class="modifier" ng-if="charCtrl.character.wisdom" ng-init="statsCtrl.getStatModifier(\'wisdom\', charCtrl.character.wisdom);">{{statsCtrl.statMods.wisdom}}</span></md-input-container><md-input-container class="stat-input" flex="50"><label>Cha</label> <input type="number" ng-model="charCtrl.character.charisma" ng-change="statsCtrl.getStatModifier(\'charisma\', charCtrl.character.charisma); charCtrl.updateCharacter(charCtrl.character.id, {charisma:charCtrl.character.charisma})"> <span class="material-icons">chevron_right</span> <span class="modifier" ng-if="charCtrl.character.charisma" ng-init="statsCtrl.getStatModifier(\'charisma\', charCtrl.character.charisma);">{{statsCtrl.statMods.charisma}}</span></md-input-container></section>'),t.put("app/components/dialog/template.html",""),t.put("app/components/navbar/navbar.html",'<md-toolbar layout="row" class="md-primay hue-2" md-scroll-shrink=""><div class="md-toolbar-tools"><md-button class="md-icon-button material-icons" aria-label="menu" ng-click="toggle()">menu</md-button><md-menu md-position-mode="target-right target"><md-button aria-label="options menu" class="md-icon-button" ng-click="$mdOpenMenu($event)"><md-icon md-menu-origin="" class="material-icons">more_vert</md-icon></md-button><md-menu-content width="4"><md-menu-item ui-sref="test"><md-button><div layout="row"><p flex="">Settings</p><md-icon md-menu-align-target="" class="material-icons">settings_applications</md-icon></div></md-button></md-menu-item></md-menu-content></md-menu></div></md-toolbar>'),t.put("app/components/newCharacter/new-character.dialog.html",'<md-dialog aria-label="New Character" class="size-lg"><form><md-toolbar><div class="md-toolbar-tools"><h2>New Character</h2><span flex=""></span><md-button class="md-icon-button" ng-click="dialog.cancel()"><md-icon class="material_icons" aria-label="Close dialog">close</md-icon></md-button></div></md-toolbar><md-dialog-content class="md-padding" layout="column"><md-input-container><label>Name</label> <input ng-model="character.name"></md-input-container><md-input-container><label>Level</label> <input type="number" ng-model="character.level"></md-input-container></md-dialog-content><md-dialog-actions layout="row"><span flex=""></span><md-button ng-click="dialog.cancel()">Cancel</md-button><md-button class="md-primary md-raised" ng-click="dialog.newCharacter(character)" style="margin-right:20px;">Save</md-button></md-dialog-actions></form></md-dialog>'),t.put("app/components/sidenav/sidenav.html",'<md-sidenav class="md-sidenav-left md-whiteframe-z2" md-component-id="left"><md-toolbar class="md-theme-indigo"><h1 class="md-toolbar-tools">Menu</h1></md-toolbar><md-content><md-list-item ui-sref="home" ng-click="toggle()"><md-icon class="material-icons">people</md-icon><p>Characters</p></md-list-item></md-content></md-sidenav>')}]);
//# sourceMappingURL=../maps/scripts/app-0ec16d399d.js.map
